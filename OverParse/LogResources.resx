<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CON_CanceledDirPicker" xml:space="preserve">
    <value>Canceled out of directory picker</value>
  </data>
  <data name="CON_check_damage_override" xml:space="preserve">
    <value>Checking for damagelog directory override</value>
  </data>
  <data name="CON_damagelog_exist" xml:space="preserve">
    <value>Making sure pso2_bin\damagelogs exists</value>
  </data>
  <data name="CON_FoundYou" xml:space="preserve">
    <value>Found existing active player ID: {0}</value>
  </data>
  <data name="CON_found_damagecfg" xml:space="preserve">
    <value>Found a config file for damage dump plugin, parsing</value>
  </data>
  <data name="CON_found_damage_override" xml:space="preserve">
    <value>Log directory override: {0}</value>
  </data>
  <data name="CON_Hack" xml:space="preserve">
    <value>No damagelog warning</value>
  </data>
  <data name="CON_InvaildPSO2_binPath" xml:space="preserve">
    <value>Please select your pso2_bin directory. OverParse uses this to read your damage logs.

If you picked a folder while setting up the Tweaker, choose that. Otherwise, it will be in your PSO2 installation folder.</value>
  </data>
  <data name="CON_LaunchMethod" xml:space="preserve">
    <value>LaunchMethod prompt</value>
  </data>
  <data name="CON_Log_Ally" xml:space="preserve">
    <value>{0} unmapped: {1} ({2} dmg from {3})</value>
  </data>
  <data name="CON_Log_Ally_Time" xml:space="preserve">
    <value>dd\.hh\:mm\:ss</value>
  </data>
  <data name="CON_Log_Start" xml:space="preserve">
    <value>Logging encounter information to file</value>
  </data>
  <data name="CON_missing_damagecfg" xml:space="preserve">
    <value>No PSO2DamageDump.cfg</value>
  </data>
  <data name="CON_Plugin_Prompt_accepted" xml:space="preserve">
    <value>Accepted plugin install</value>
  </data>
  <data name="CON_Plugin_Prompt_denied" xml:space="preserve">
    <value>Denied plugin install</value>
  </data>
  <data name="CON_Plugin_Prompt_initial" xml:space="preserve">
    <value>Prompting for initial plugin install</value>
  </data>
  <data name="CON_Plugin_Prompt_update" xml:space="preserve">
    <value>Prompting for plugin update</value>
  </data>
  <data name="CON_Plugin_Status" xml:space="preserve">
    <value>Installed: {0} / Current: {1}</value>
  </data>
  <data name="CON_ReadingLog" xml:space="preserve">
    <value>Reading from {0}</value>
  </data>
  <data name="CON_split" xml:space="preserve">
    <value>{0} | {1}</value>
  </data>
  <data name="CON_TestPSO2_binPath" xml:space="preserve">
    <value>Testing {0} as pso2_bin directory...</value>
  </data>
  <data name="CON_UpdatePlugin_Bad" xml:space="preserve">
    <value>PLUGIN INSTALL FAILED: {0}</value>
  </data>
  <data name="CON_UpdatePlugin_Good" xml:space="preserve">
    <value>Plugin install successful</value>
  </data>
  <data name="CON_Update_first" xml:space="preserve">
    <value>FIRST ATTACK RECORDED: {0} dmg from {1} ({2}) with {3}, to {4} ({5})</value>
  </data>
  <data name="CON_Update_newplayer" xml:space="preserve">
    <value>Found new active player ID: {0}</value>
  </data>
  <data name="LOG_Combatant_header" xml:space="preserve">
    <value>###### {0} - {1} dmg ({2}) ######"</value>
  </data>
  <data name="LOG_Combatant_line1" xml:space="preserve">
    <value>{0}% | {1} ({2} dmg)</value>
  </data>
  <data name="LOG_Combatant_line2" xml:space="preserve">
    <value>|   {0} hits - {1} min, {2} avg, {3} max</value>
  </data>
  <data name="LOG_Combatant_Stat" xml:space="preserve">
    <value>{0} | {1} dmg | {2} contrib | {3} DPS | Max: {4}</value>
  </data>
  <data name="LOG_TimeStamp" xml:space="preserve">
    <value>mm\:ss</value>
  </data>
  <data name="UI_AskTweakerUsage" xml:space="preserve">
    <value>Do you use the PSO2 Tweaker?</value>
  </data>
  <data name="UI_CanceledDirPicker" xml:space="preserve">
    <value>OverParse needs a valid PSO2 installation to function.
The application will now close.</value>
  </data>
  <data name="UI_Clip" xml:space="preserve">
    <value>{0} {1} | </value>
  </data>
  <data name="UI_Hack" xml:space="preserve">
    <value>Your PSO2 folder doesn't contain any damagelogs. This is not an error, just a reminder!

Please turn on the Damage Parser plugin in PSO2 Tweaker (orb menu &gt; Plugins). OverParse needs this to function. You may also want to update the plugins while you're there.</value>
  </data>
  <data name="UI_InvaildPSO2_binPath" xml:space="preserve">
    <value>Please select your pso2_bin directory.

This folder will be inside your PSO2 install folder, which is usually at C:\PHANTASYSTARONLINE2\.

If you installed the game multiple times (e.g. through the torrent), please make sure you pick the right one, or OverParse won't be able to read your logs!</value>
  </data>
  <data name="UI_Plugin_Prompt_denied" xml:space="preserve">
    <value>OverParse needs the Damage Parser plugin to function.

The application will now close.</value>
  </data>
  <data name="UI_Plugin_Prompt_initial" xml:space="preserve">
    <value>OverParse needs a Tweaker plugin to recieve its damage information.

The plugin can be installed without the Tweaker, but it won't be automatically updated, and I can't provide support for this method.

Do you want to try to manually install the Damage Parser plugin?</value>
  </data>
  <data name="UI_Plugin_Prompt_update" xml:space="preserve">
    <value>This release of OverParse includes a new version of the parsing plugin. Would you like to update now?

OverParse may behave unpredictably if you use a different version than it expects.</value>
  </data>
  <data name="UI_SelectPSO2_Finder" xml:space="preserve">
    <value>Select your pso2_bin folder. This will be inside the folder you installed PSO2 to.</value>
  </data>
  <data name="UI_SetupTitle" xml:space="preserve">
    <value>OverParse Setup</value>
  </data>
  <data name="UI_UpdatePlugin_Bad" xml:space="preserve">
    <value>Something went wrong with manual installation. This usually means that the files are already in use: try again with PSO2 closed.

If you've recieved this message even after closing PSO2, you may need to run OverParse as administrator.</value>
  </data>
  <data name="UI_UpdatePlugin_Good" xml:space="preserve">
    <value>Setup complete! A few files have been copied to your pso2_bin folder.\n\nIf PSO2 is running right now, you'll need to close it before the changes can take effect.</value>
  </data>
  <data name="UI_InvaildPSO2_binPath_NAG" xml:space="preserve">
    <value>That doesn't appear to be a valid pso2_bin directory.

If you installed the game using default settings, it will probably be in C:\PHANTASYSTARONLINE2\pso2_bin\. Otherwise, find the location you installed to.</value>
  </data>
</root>