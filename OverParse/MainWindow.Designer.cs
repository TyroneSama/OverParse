//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OverParse {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class MainWindow {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal MainWindow() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("OverParse.MainWindow", typeof(MainWindow).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Always-on-top hotkey pressed.
        /// </summary>
        internal static string CON_AlwaysOnTop_Key {
            get {
                return ResourceManager.GetString("CON_AlwaysOnTop_Key", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Applying UI settings.
        /// </summary>
        internal static string CON_ApplyUI {
            get {
                return ResourceManager.GetString("CON_ApplyUI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Found a new log file ({0}), switching....
        /// </summary>
        internal static string CON_CheckForNewLog {
            get {
                return ResourceManager.GetString("CON_CheckForNewLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Initializing damageTimer.
        /// </summary>
        internal static string CON_damageTimer_INIT {
            get {
                return ResourceManager.GetString("CON_damageTimer_INIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debug hotkey pressed.
        /// </summary>
        internal static string CON_DebugMenu_Key {
            get {
                return ResourceManager.GetString("CON_DebugMenu_Key", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ending encounter.
        /// </summary>
        internal static string CON_EndEncounter_Click_END {
            get {
                return ResourceManager.GetString("CON_EndEncounter_Click_END", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Saving last combatant list.
        /// </summary>
        internal static string CON_EndEncounter_Click_SAVE {
            get {
                return ResourceManager.GetString("CON_EndEncounter_Click_SAVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encounter hotkey pressed.
        /// </summary>
        internal static string CON_EndEncounter_Key {
            get {
                return ResourceManager.GetString("CON_EndEncounter_Key", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ending encounter (no log).
        /// </summary>
        internal static string CON_EndEncounterNoLog_Click_END {
            get {
                return ResourceManager.GetString("CON_EndEncounterNoLog_Click_END", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encounter hotkey (no log) pressed.
        /// </summary>
        internal static string CON_EndEncounterNoLog_Key {
            get {
                return ResourceManager.GetString("CON_EndEncounterNoLog_Key", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Initializing inactiveTimer.
        /// </summary>
        internal static string CON_inactiveTimer_INIT {
            get {
                return ResourceManager.GetString("CON_inactiveTimer_INIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Initializing hotkeys.
        /// </summary>
        internal static string CON_Init_HotKeys {
            get {
                return ResourceManager.GetString("CON_Init_HotKeys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hotkeys failed to initialize.
        /// </summary>
        internal static string CON_Init_HotKeys_FAIL {
            get {
                return ResourceManager.GetString("CON_Init_HotKeys_FAIL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Launch method: {0}.
        /// </summary>
        internal static string CON_Launch {
            get {
                return ResourceManager.GetString("CON_Launch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Initializing default log.
        /// </summary>
        internal static string CON_LOG_INIT {
            get {
                return ResourceManager.GetString("CON_LOG_INIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reinitializing log.
        /// </summary>
        internal static string CON_LOG_REINIT {
            get {
                return ResourceManager.GetString("CON_LOG_REINIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Initializing logCheckTimer.
        /// </summary>
        internal static string CON_logCheckTimer_INIT {
            get {
                return ResourceManager.GetString("CON_logCheckTimer_INIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to End of MainWindow constructor.
        /// </summary>
        internal static string CON_MainWindow_END {
            get {
                return ResourceManager.GetString("CON_MainWindow_END", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to attempting to open {0}.
        /// </summary>
        internal static string CON_OpenRecentLog_Click {
            get {
                return ResourceManager.GetString("CON_OpenRecentLog_Click", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Window&apos;s off-screen, resetting.
        /// </summary>
        internal static string CON_outOfBounds {
            get {
                return ResourceManager.GetString("CON_outOfBounds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to === UNHANDLED EXCEPTION ===.
        /// </summary>
        internal static string CON_Panic {
            get {
                return ResourceManager.GetString("CON_Panic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resetting.
        /// </summary>
        internal static string CON_ResetOverParse {
            get {
                return ResourceManager.GetString("CON_ResetOverParse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Finished applying settings.
        /// </summary>
        internal static string CON_Setting_END {
            get {
                return ResourceManager.GetString("CON_Setting_END", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keys in skill dict: {0}.
        /// </summary>
        internal static string CON_SKILL_COUNT {
            get {
                return ResourceManager.GetString("CON_SKILL_COUNT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parsing skills.csv.
        /// </summary>
        internal static string CON_SKILL_PROCESS {
            get {
                return ResourceManager.GetString("CON_SKILL_PROCESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating skills.csv.
        /// </summary>
        internal static string CON_SKILL_Update {
            get {
                return ResourceManager.GetString("CON_SKILL_Update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to skills.csv update failed: {0}.
        /// </summary>
        internal static string CON_SKILL_Update_FAIL {
            get {
                return ResourceManager.GetString("CON_SKILL_Update_FAIL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to JSON version: {0} / Assembly version: {1}.
        /// </summary>
        internal static string CON_Update_DIFF {
            get {
                return ResourceManager.GetString("CON_Update_DIFF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to update check: {0}.
        /// </summary>
        internal static string CON_Update_FAIL {
            get {
                return ResourceManager.GetString("CON_Update_FAIL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checking for release updates.
        /// </summary>
        internal static string CON_Update_INIT {
            get {
                return ResourceManager.GetString("CON_Update_INIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatically ending an encounter.
        /// </summary>
        internal static string CON_UpdateForm {
            get {
                return ResourceManager.GetString("CON_UpdateForm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upgrading settings.
        /// </summary>
        internal static string CON_Upgrade {
            get {
                return ResourceManager.GetString("CON_Upgrade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OVERPARSE V.{0}.
        /// </summary>
        internal static string CON_VersionStamp {
            get {
                return ResourceManager.GetString("CON_VersionStamp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Closing....
        /// </summary>
        internal static string CON_Window_Closing {
            get {
                return ResourceManager.GetString("CON_Window_Closing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OverParse v{0}
        ///A lightweight self-auditing tool.
        ///
        ///Shoutouts to WaifuDfnseForce.
        ///Additional shoutouts to Variant, AIDA, and everyone else who makes the Tweaker plugin possible.
        ///
        ///Please use damage information responsibly..
        /// </summary>
        internal static string UI_About_Click {
            get {
                return ResourceManager.GetString("UI_About_Click", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This will make the OverParse window invisible whenever PSO2 or OverParse are not in the foreground.
        ///
        ///To show the window, Alt+Tab into OverParse, or click the icon on your taskbar..
        /// </summary>
        internal static string UI_AutoHideWindow_Click {
            get {
                return ResourceManager.GetString("UI_AutoHideWindow_Click", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SessionLog_.
        /// </summary>
        internal static string UI_EndEncounter_Click_MENUITEM {
            get {
                return ResourceManager.GetString("UI_EndEncounter_Click_MENUITEM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OverParse failed to initialize hotkeys. This is usually because something else is already using them.
        ///
        ///The program will still work, but hotkeys will not function. Sorry for the inconvenience!.
        /// </summary>
        internal static string UI_Init_HotKeys_FAIL {
            get {
                return ResourceManager.GetString("UI_Init_HotKeys_FAIL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OverParse doesn&apos;t have write access to its folder, and won&apos;t be able to save logs or update skill mappings. This usually happens when you run it from Program Files.
        ///
        ///This is a Windows restriction, and unfortunately I can&apos;t do anything about it.\n\nPlease run OverParse as administrator, or move it somewhere else. Sorry for the inconvenience!.
        /// </summary>
        internal static string UI_LOG_FAIL {
            get {
                return ResourceManager.GetString("UI_LOG_FAIL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Oops. This is embarassing.
        ///
        ///OverParse encountered an unexpected error. If this happens again, please complain to TyroneSama at your earliest convenience. Include your log from OverParse\logs and the following message:
        ///
        ///{0}
        ///
        ///Sorry for the inconvenience!.
        /// </summary>
        internal static string UI_Panic {
            get {
                return ResourceManager.GetString("UI_Panic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OverParse Error - 素晴らしく運がないね君は!.
        /// </summary>
        internal static string UI_Panic_Title {
            get {
                return ResourceManager.GetString("UI_Panic_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you SURE you want to reset OverParse?
        ///
        ///This will clear all of your application settings and allow you to reselect your pso2_bin folder, but won&apos;t delete your stored logs..
        /// </summary>
        internal static string UI_ResetOverParse {
            get {
                return ResourceManager.GetString("UI_ResetOverParse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How many seconds should the system wait before stopping an encounter?.
        /// </summary>
        internal static string UI_SetEncounterTimeout_Click {
            get {
                return ResourceManager.GetString("UI_SetEncounterTimeout_Click", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encounter Timeout.
        /// </summary>
        internal static string UI_SetEncounterTimeout_Click_Title {
            get {
                return ResourceManager.GetString("UI_SetEncounterTimeout_Click_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OverParse Setup.
        /// </summary>
        internal static string UI_SetupTitle {
            get {
                return ResourceManager.GetString("UI_SetupTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OverParse failed to update its skill mappings. This usually means your connection hiccuped for a moment.
        ///
        ///Since you have no skill mappings downloaded, all attacks will be marked as \&quot;{0}\&quot;. If you&apos;d like to try and update again, please relaunch OverParse..
        /// </summary>
        internal static string UI_SKILL_Update_FAIL {
            get {
                return ResourceManager.GetString("UI_SKILL_Update_FAIL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OverParse failed to update its skill mappings. This usually means your connection hiccuped for a moment.
        ///
        ///A local copy will be used instead. If you&apos;d like to try and update again, just relaunch OverParse..
        /// </summary>
        internal static string UI_SKILL_Update_FAIL_LOCAL {
            get {
                return ResourceManager.GetString("UI_SKILL_Update_FAIL_LOCAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OverParse.
        /// </summary>
        internal static string UI_Title {
            get {
                return ResourceManager.GetString("UI_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  - {0} DPS.
        /// </summary>
        internal static string UI_UpdateForm_DPS {
            get {
                return ResourceManager.GetString("UI_UpdateForm_DPS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  - MAX: {0}.
        /// </summary>
        internal static string UI_UpdateForm_MAX {
            get {
                return ResourceManager.GetString("UI_UpdateForm_MAX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Waiting - {0}.
        /// </summary>
        internal static string UI_UpdateForm_WAIT {
            get {
                return ResourceManager.GetString("UI_UpdateForm_WAIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There&apos;s a new version of OverParse available!
        ///
        ///You&apos;re running version {0}. The latest version is version {1}.
        ///
        ///Would you like to download it now from GitHub?.
        /// </summary>
        internal static string UI_UpdateReady {
            get {
                return ResourceManager.GetString("UI_UpdateReady", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OverParse Update.
        /// </summary>
        internal static string UI_UpdateTitle {
            get {
                return ResourceManager.GetString("UI_UpdateTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to image: {0} w {1} h {2} m\n.
        /// </summary>
        internal static string UI_WindowStats_image {
            get {
                return ResourceManager.GetString("UI_WindowStats_image", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to menu bar: {0} padding {1} margin\n.
        /// </summary>
        internal static string UI_WindowStats_menubar_pm {
            get {
                return ResourceManager.GetString("UI_WindowStats_menubar_pm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to menu bar: {0} width {1} height\n.
        /// </summary>
        internal static string UI_WindowStats_menubar_wh {
            get {
                return ResourceManager.GetString("UI_WindowStats_menubar_wh", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to menu item: {0} fg {1} bg\n.
        /// </summary>
        internal static string UI_WindowStats_menuitem_fb {
            get {
                return ResourceManager.GetString("UI_WindowStats_menuitem_fb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to menu item: {0} {1} {2} {3}\n.
        /// </summary>
        internal static string UI_WindowStats_menuitem_fs {
            get {
                return ResourceManager.GetString("UI_WindowStats_menuitem_fs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to menu item: {0} padding {1} margin\n.
        /// </summary>
        internal static string UI_WindowStats_menuitem_pm {
            get {
                return ResourceManager.GetString("UI_WindowStats_menuitem_pm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to menu item: {0} width {1} height\n.
        /// </summary>
        internal static string UI_WindowStats_menuitem_wh {
            get {
                return ResourceManager.GetString("UI_WindowStats_menuitem_wh", resourceCulture);
            }
        }
    }
}
